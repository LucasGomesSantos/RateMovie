{"version":3,"sources":["components/RepositoryItem.tsx","components/FeaturedMovie/index.tsx","components/Header/index.tsx","components/RepositoryList.tsx","components/FeaturedMovieDetail/index.tsx","components/RepositoryDetails.tsx","assets/sign-in-background2.png","pages/SignIn/styles.ts","pages/SignIn/index.tsx","routes/index.tsx","App.tsx","index.tsx"],"names":["RepositoryItem","props","className","src","repository","poster_path","alt","original_title","overview","vote_average","to","id","item","firstDate","Date","release_date","genres","i","push","name","descr","length","substring","style","backgroundSize","backgroundPosition","backgroundImage","getFullYear","black","RepositoryList","useState","repositories","setRepositories","guests","setGuests","blackHeader","index","setIndex","nome","localStorage","getItem","useEffect","repos","fetch","then","response","json","data","step1","step2","Math","random","step3","floor","sort","x","Header","FeaturedMovie","guest_session_id","map","popularity","tagline","join","RepositoryDetails","idMovie","movie","setRepositorie","setPost","endpoint","type","onChange","ev","target","value","setItem","onClick","requestOptions","method","headers","body","JSON","stringify","window","alert","Container","styled","div","Content","shade","Background","signBackgroundImg","SignIn","placeholder","routes","path","exact","component","App","render","document","getElementById"],"mappings":"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","file":"static/js/main.5081dd50.chunk.js","sourcesContent":["import { Link,\r\n    useParams \r\n} from \"react-router-dom\";\r\n\r\nconst urlBase = 'https://image.tmdb.org/t/p/w300/'\r\nconst urlDetails ='./RepositoryDetails'\r\n\r\ninterface RepositoryItemProps {\r\n    repository: {\r\n        id: any;\r\n        original_title: string;\r\n        vote_average: string;\r\n        overview: string;\r\n        poster_path: string;\r\n        release_date: string;\r\n    }\r\n}\r\n\r\n\r\nexport function RepositoryItem(props: RepositoryItemProps){\r\n    return(   \r\n        <li> \r\n         <div className=\"infoMovie\">\r\n            <img src={urlBase+props.repository.poster_path} alt={props.repository.original_title}/>\r\n         </div>\r\n            <strong>{props.repository.original_title ?? 'Sem Nome'}</strong>\r\n            <p>{props.repository.overview}</p>\r\n            <strong>Nota</strong>\r\n            <p>{props.repository.vote_average}</p>\r\n            <Link to={urlDetails+props.repository.id}><button>Detalhes</button></Link>\r\n        </li>\r\n    )\r\n}","import React from 'react';\r\nimport './styles.scss';\r\n\r\nexport default ({item}) => {\r\n\r\n    let firstDate = new Date(item?.release_date);\r\n\r\n    let genres = [];\r\n    for(let i in item?.genres){\r\n        genres.push(item.genres[i].name);\r\n    }\r\n\r\n    let descr = item?.overview;\r\n    if(descr?.length > 200){\r\n        descr = descr.substring(0, 200)  + '...';\r\n     }\r\n\r\n\r\n    return (\r\n        <section className=\"featured\" style={{\r\n            backgroundSize: 'cover',\r\n            backgroundPosition: 'center',\r\n            backgroundImage: `url(https://image.tmdb.org/t/p/original${item?.poster_path})`\r\n        }}>\r\n            <div className=\"featured--vertical\">\r\n                <div className=\"featured--horizontal\">\r\n                    <div className=\"featured--name\">{item?.original_title}</div>\r\n                    <div className=\"featured--info\">\r\n                        <div className=\"featured--points\">{item?.vote_average} pontos</div>\r\n                        <div className=\"featured--year\">{firstDate?.getFullYear()}</div>\r\n                    </div>\r\n                        <div className=\"featured--description\">{descr}</div>                \r\n\r\n                </div>\r\n            </div>\r\n       \r\n        </section>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport './styles.scss';\r\n\r\nimport { Link,\r\n    useParams \r\n} from \"react-router-dom\";\r\n\r\nexport default ({black})=>{\r\n    return(\r\n        <header className={black ?\"black\" : ''}>\r\n            <div className=\"header--logo\">\r\n                <img src=\"https://upload.wikimedia.org/wikipedia/commons/0/04/Funny_movie_logo.png\"/>\r\n            </div>\r\n            <div className=\"header--user\">\r\n            <Link to=\"./\"><img src=\"https://pbs.twimg.com/profile_images/1240119990411550720/hBEe3tdn_400x400.png\" alt=\"Sair\"/></Link>\r\n            </div>\r\n        </header>\r\n    )\r\n}","import { RepositoryItem } from \"./RepositoryItem\";\r\nimport { useState, useEffect } from \"react\";\r\nimport FeaturedMovie from '../components/FeaturedMovie';\r\nimport Header from '../components/Header';\r\n\r\nimport '../styles/repositories.scss'\r\n\r\n\r\ninterface Repository{\r\n    id: any;\r\n    original_title: string;\r\n    vote_average: string;\r\n    overview: string;\r\n    poster_path: string;\r\n    release_date: string;\r\n}\r\n\r\ninterface Guest{\r\n    guest_session_id: string;\r\n}\r\n\r\n\r\n\r\nexport function RepositoryList(){\r\n\r\nconst [repositories, setRepositories] = useState<Repository[]>([])\r\nconst [guests, setGuests] = useState<Guest>()\r\nconst [blackHeader, setblackHeader]= useState(false);\r\nconst [index, setIndex]= useState(null);\r\nconst nome = localStorage.getItem('keyItemName')\r\nconst urlBase = 'https://api.themoviedb.org/3/movie/top_rated?language=en-US&api_key=0ad7ce2d705fb476cb9ac2387a7fc0b0&page='\r\n\r\n\r\n    \r\n        useEffect(() => {\r\n            const repos = []\r\n            for(let i=1; i<6; i++){\r\n            fetch(urlBase+i)\r\n            .then(response => response.json())\r\n            .then(data => repos.push(...data['results']))\r\n                //setRepositories(data['results']))\r\n            }\r\n            let step1 = (repositories.length-1) - 0 + 1;\r\n            let step2 = Math.random() * step1;\r\n            let step3 = Math.floor(step2) + 0;\r\n            setIndex(step3);\r\n\r\n            setRepositories(repos.sort(x => x.vote_average));\r\n        }, [])\r\n\r\n\r\nuseEffect(() => {\r\n    fetch('https://api.themoviedb.org/3/authentication/guest_session/new?api_key=0ad7ce2d705fb476cb9ac2387a7fc0b0')\r\n    .then(response => response.json())\r\n    .then(data => setGuests(data))\r\n}, []);\r\n \r\n\r\n    return (\r\n        <section className =\"repository-list\">\r\n        <Header black={blackHeader}/>\r\n\r\n        {repositories && \r\n        <FeaturedMovie item ={repositories[index]}/> \r\n      }\r\n\r\n        <h1> Top 100 Filmes </h1>\r\n        <h3>Bem vindo {nome}, você está conectado como o visitante ID: {guests?.guest_session_id}</h3>\r\n            <ul>\r\n                {repositories.map(repository => {\r\n                    return <RepositoryItem key={repository.id} repository = {repository} />\r\n                 })}\r\n            </ul>\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default RepositoryList;","import React from 'react';\r\nimport './styles.scss';\r\n\r\nexport default ({item}) => {\r\n\r\n    let firstDate = new Date(item?.release_date);\r\n\r\n    let genres = [];\r\n    for(let i in item?.genres){\r\n        genres.push(item.genres[i].name);\r\n    }\r\n\r\n    let descr = item?.overview;\r\n    if(descr?.length > 200){\r\n        descr = descr.substring(0, 200)  + '...';\r\n     }\r\n\r\n\r\n    return (\r\n        <section className=\"featured\" style={{\r\n            backgroundSize: 'cover',\r\n            backgroundPosition: 'center',\r\n            backgroundImage: `url(https://image.tmdb.org/t/p/original${item?.poster_path})`\r\n        }}>\r\n            <div className=\"featured--vertical\">\r\n                <div className=\"featured--horizontal\">\r\n                    <div className=\"featured--name\">{item?.original_title}</div>\r\n                    <div className=\"featured--info\">\r\n                        <div className=\"featured--points\">{item?.vote_average} pontos</div>\r\n                        <div className=\"featured--points\">{item?.popularity} pontos de popularidade</div>\r\n                        <div className=\"featured--points\">{item?.tagline} </div>\r\n                        <div className=\"featured--year\">Ano de lançamento {firstDate?.getFullYear()}</div>\r\n                    </div>\r\n                        <div className=\"featured--description\">{descr}</div>        \r\n                        <div className=\"featured--genres\">Gêneros: <strong> {genres.join(', ')} </strong></div>   \r\n                </div>\r\n            </div>\r\n        </section>\r\n\r\n    )\r\n}\r\n","import { useState, useEffect } from \"react\";\r\nimport FeaturedMovie from '../components/FeaturedMovieDetail';\r\nimport Header from '../components/Header';\r\n\r\nimport '../styles/repositories.scss'\r\n\r\ninterface Repository{\r\n    id: any;\r\n    original_title: string;\r\n    vote_average: string;\r\n    overview: string;\r\n    poster_path: string;\r\n    release_date: string;\r\n    popularity: string;\r\n    tagline: string;\r\n    genres: string;\r\n}\r\n\r\n\r\n\r\nexport function RepositoryDetails(id){\r\n\r\nconst idMovie = id['match']['params'].id\r\n\r\n\r\nconst [movie, setRepositorie] = useState<Repository[]>([])\r\nconst [blackHeader, setblackHeader]= useState(false);\r\nconst [retPost, setPost] = useState<[]>([])\r\nconst [index, setIndex]= useState(null);\r\nconst nome = localStorage.getItem('keyItemName')\r\nconst API_KEY = '0ad7ce2d705fb476cb9ac2387a7fc0b0';\r\nconst API_BASE = 'https://api.themoviedb.org/3';\r\nconst endpoint = `/movie/${idMovie}?language=pt-BR&api_key=${API_KEY}`\r\n\r\nuseEffect(() => {\r\n    fetch(`${API_BASE}${endpoint}`)\r\n    .then(response => response.json())\r\n    .then(data => setRepositorie(data))\r\n}, []);\r\n\r\n\r\n function enviarNota(){\r\n\r\n    if (localStorage.getItem('keyItemPonto') % 0.50 == 0)  {\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({ value: localStorage.getItem('keyItemPonto')})\r\n        };\r\n        fetch('https://api.themoviedb.org/3/movie/550/rating?api_key=0ad7ce2d705fb476cb9ac2387a7fc0b0&guest_session_id=6b187fcb2348557e79274cb37fc2e325', requestOptions)\r\n        .then(response => response.json())\r\n        .then(data => setPost(data));\r\n        window.alert('Obrigado, sua nota foi enviada com sucesso')\r\n    }\r\n    else { \r\n        window.alert('O valor da pontuação precisa ser multiplo de 0.5')\r\n    }\r\n}\r\n\r\nfunction onChange(ev) {\r\n    const { name, value } =ev.target;\r\n    localStorage.setItem('keyItemPonto', value)\r\n}\r\n\r\n    return (\r\n        <section className =\"repository-list\">\r\n\r\n        <Header black={blackHeader}/>\r\n\r\n        {movie && \r\n        <FeaturedMovie item ={movie}/> \r\n        }\r\n\r\n        <input className=\"inpNota\" id=\"nota\" type=\"number\" onChange={onChange}/>\r\n        <button className=\"envNota\" onClick={enviarNota}>pontuar</button>\r\n   \r\n        </section>\r\n    );\r\n}\r\n\r\n\r\nexport default RepositoryDetails;","export default __webpack_public_path__ + \"static/media/sign-in-background2.23f9649e.png\";","import styled from 'styled-components';\r\nimport signBackgroundImg from '../../assets/sign-in-background2.png';\r\nimport { shade } from 'polished'\r\n\r\nexport const Container = styled.div`\r\n    height: 100vh;\r\n    display: flex;\r\n    align-items: stretch;\r\n`;\r\n\r\nexport const Content = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    place-content: center;\r\n    align-items: center;\r\n    width: 100%;\r\n    max-width: 700px;\r\n\r\n    img {\r\n        width: 400px;\r\n        height: 200px;\r\n    }\r\n\r\n    form {\r\n        margin: 80px;\r\n        width: 340x;\r\n        text-align: center;\r\n    }\r\n\r\n    h1 {\r\n        margin-bottom: 24px;\r\n    }\r\n\r\n    input{\r\n        background: #232129;\r\n        border-radius:10px;\r\n        border: 2px solid #232129;\r\n        color: #FFF;\r\n        padding: 16px;\r\n        width: 100%;\r\n\r\n        & + input {\r\n            margin-top: 8px; \r\n        }\r\n    }\r\n\r\n    button {\r\n        background: #57ade6;\r\n        height: 56px;\r\n        border-radius:10px;\r\n        padding: 0 16px;\r\n        color: #FFF;\r\n        font-weight: 500;\r\n        margin-top: 16px;\r\n        width: 100%;\r\n        transition: background-color 0.2s;\r\n\r\n        &:hover {\r\n            background: ${shade(0.2, '#57ade6')};\r\n        }\r\n    }\r\n`;\r\n\r\nexport const Background = styled.div`\r\n    flex: 1;\r\n    background: url(${signBackgroundImg}) no-repeat center;\r\n    background-size: cover;\r\n`;","import React from 'react';\r\nimport {useState} from 'react'\r\nimport { Link,\r\n        useParams \r\n  } from \"react-router-dom\";\r\n\r\nimport { Container, Content, Background } from './styles';\r\n\r\nconst initialValue = {\r\n    name: '',\r\n}\r\n\r\nconst GuestForm = () => {\r\n    const [value, setValue] = useState(initialValue);\r\n}\r\n\r\nfunction onChange(ev) {\r\n    const { name, value } =ev.target;\r\n    localStorage.setItem('keyItemName', value)\r\n}\r\n\r\n\r\nconst SignIn: React.FC = () => {\r\n   \r\n\r\n    return (\r\n    <Container>\r\n        <Content>\r\n            <img src=\"https://upload.wikimedia.org/wikipedia/commons/0/04/Funny_movie_logo.png\" alt =\"logo\"></img>\r\n            <form>\r\n                <h1>Acessar como visitante</h1>\r\n                <input id=\"name\" placeholder=\"Nome\" onChange={onChange} />\r\n                <Link to=\"./RepositoryList\"><button type=\"button\">Entrar</button></Link>\r\n            </form>\r\n        </Content>\r\n     <Background/>\r\n    </Container>\r\n    );\r\n};\r\n\r\nexport default SignIn;","import React from 'react';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link\r\n  } from \"react-router-dom\";\r\n\r\n  import RepositoryList from '../components/RepositoryList';\r\n  import RepositoryDetails from '../components/RepositoryDetails';\r\n  import SignIn from '../pages/SignIn';\r\n\r\n  const routes: React.FC = () => (\r\n  <Switch>\r\n      <Route path=\"/RepositoryList\" exact component={RepositoryList}></Route>\r\n      <Route path=\"/RepositoryDetails:id\" exact component={RepositoryDetails}></Route>\r\n      <Route path=\"/\" exact component={SignIn}></Route>\r\n  </Switch>    \r\n  );\r\n\r\n  export default routes;\r\n\r\n","import {render} from 'react-dom';\r\nimport './styles/global.scss';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link\r\n} from \"react-router-dom\";\r\nimport Routes from './routes';\r\n\r\nexport function App(){\r\n\r\n    return  (\r\n      <Router>\r\n        <Routes/>\r\n      </Router>\r\n    )\r\n}","import {render} from 'react-dom';\r\n\r\nimport { App } from './App'\r\n\r\nrender(<App></App>, document.getElementById('root'));\r\n\r\n\r\n\r\n"],"sourceRoot":""}